#!/bin/sh

# prepare the installer files

files="/media/cdrom/custom"
apks="$files/apks/x86_64"
cp -r $files/install /root/
cp -r $files/choices.yml /root/
cp -r $files/config /root/
#cp -r $files/.venv /root/
#cp -r $files/apks /root
cp $files/keys/user-*.rsa.pub /etc/apk/keys/
echo "$files/apks" >> /etc/apk/repositories


# TODO: remove this (merge with the "useable live environment")
# dependencies for the install script
#apk add yq

# TODO: fix the "cannot find package" ?
# (once networkmanager is up, everything can be bootstrapped)
# (can download packages instead of virtualenv and install pip)

#=================================================================
# prepare a useable live environment to configure the installation
#=================================================================


# packages useful for the user
apk add nano vim
# adding vim creates an error, vim-common has to be installed manually
apk add --force-non-repository $apks/vim-common-*


# prepare network access with NetworkManager

# these apk files don't get detected correctly from the apk index, and have to be installed manually (in this order)
# this band-aid solution (manually installing the .apk files) is the only way i found around this issue
apk add --force-non-repository $apks/udev-init-scripts-*
#apk add --force-non-repository $apks/udev-init-scripts-openrc-*
apk add --force-non-repository $apks/eudev-openrc-*
apk add --force-non-repository $apks/eudev-*

# udev is needed by NetworkManager
setup-devd udev

apk add networkmanager
apk add networkmanager-cli

# same story, the exact error is: "package mentioned in index not found (try 'apk update')
apk add --force-non-repository $apks/networkmanager-openrc-*
apk add --force-non-repository $apks/dbus-openrc-*

rc-service networkmanager start
# TODO: read the debug info and compare when this breaks
ip a > ip.log
nmcli device > nmcli.log

# now that internet access is enabled, there is no need to keep all the packages locally (or rather, this is not possible due to unfixeable problems with apk)
# TODO: wait until boostrap phase to install packages directly into the system (instead of live-installing everything from internet)

# wait until an ip address is found
# alternative: nmcli device gives empty string
interfaces=$(ip a | grep "^\d" | cut -d ":" -f 2 | cut -c 2- | grep -v lo)
interface=$(echo "$interfaces" | head -n 1)
ip=$(ip addr show $interface | grep inet)
while [ -z "$ip" ]
do
	sleep 0.1
	ip=$(ip addr show $interface | grep inet)
done

# TODO: wait until dns resolution works (nslookup ?)


# wait until connection is up before fetching mirrors
# even though DNS fails and google cannot be reached, this is enough delay
ping -c 1 google.com
setup-apkrepos -1 -c  # py3-pip is only on community repositories
# TODO: remove from the new system
apk update
apk upgrade

apk add python3  #py3-pip
#pip install pyaml
apk add py3-yaml
ip a > ip2.log
nmcli device > nmcli2.log
